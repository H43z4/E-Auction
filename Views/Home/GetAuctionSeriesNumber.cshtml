@model IEnumerable<Models.Views.Auction.SeriesNumber>

@{
    ViewData["Title"] = "Auction Series Detail";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .pagination > li > a {
        color: black;
    }
</style>

@section Scripts {

    <link href="~/css/sweetalert.css" rel="stylesheet" />
    <script src="~/lib/Custom/sweetalert.min.js"></script>
    <script src="~/lib/Custom/jquery.twbsPagination.min.js"></script>
    <script type="text/javascript">

        function isNumberKey(evt) {
            var charCode = (evt.which) ? evt.which : event.keyCode

            if (charCode >= 65 && charCode <= 90 || charCode >= 97 && charCode <= 122 || charCode == 32)
                return true;

            return false;
        }

        function removeSpecialChar(evt) {

            var regex = new RegExp("^[a-zA-Z0-9]+$");
            var key = String.fromCharCode(!event.charCode ? event.which : event.charCode);
            if (!regex.test(key)) {
                event.preventDefault();
                return false;
            }
        }

        function ResetDOM() {
            $('input[name=chasisNumber]').on('input', function (e) {
                $(this).val(function (i, v) {
                    return v.replace(/[^A-Za-z0-9]+/g, '');
                });
            });
        }

        $(document).ready(function () {

            $("input:checkbox").change(function () {

                //$('#seriesNumbers tr').filter(':has(:checkbox:checked)').find('td').each(function () {
                //    // this = td element
                //});

                $("#selectedSeriesNumbers tbody tr").each(function () {

                    var seriesNumberId = $(this).find('input[name=seriesNumberId]').val();

                    var selectedRows = $('#seriesNumbers tr').filter(':has(:checkbox:checked)').find("input[name = seriesNumberId][value = " + seriesNumberId + "]");

                    if (!selectedRows.length) {

                        $(this).remove();
                    }
                });

                //var selectedSeriesNumbers = $("#selectedSeriesNumbers tr").length - 1;  // less than header row

                $('#seriesNumbers tr').filter(':has(:checkbox:checked)').each(function () {

                    var seriesNumberId = $(this).find('input[name=seriesNumberId]').val();

                    var alreadySelectedRow = $("#selectedSeriesNumbers tbody tr td input[name=seriesNumberId][value=" + seriesNumberId + "]");

                    if (!alreadySelectedRow.length) {

                        // this = tr
                        $tr = $(this).clone(false);

                        $tr.find("td:nth-of-type(4)").find("input").css("display", "block");
                        $tr.find("td:nth-of-type(5)").find("input").css("display", "block");
                        $tr.find("td:first-child").remove();


                        //$('td', $tr).each(function (i, v) {
                        //    // If you need to iterate the TD's
                        //    if (i == 3) {

                        //        //$(this).find("input").attr("name", "seriesNumbers[" + selectedSeriesNumbers + "].seriesNumberId");
                        //        var ele = $(this).find("input");
                        //        $(this).find("input").css("display", "block");
                        //    }

                        //    if (i == 0)
                        //        $(this).remove();
                        //});

                        //get row values
                        $('#selectedSeriesNumbers tbody').append($tr);

                        ResetDOM();
                    }
                });
            });

            $('#btnNext').click(function (event) {

                event.preventDefault();

                var data = new Array();

                var isDataValid = true;

                $("#selectedSeriesNumbers tbody tr").each(function () {

                    var seriesNumberId = $(this).find('input[name=seriesNumberId]').val();
                    var chasisNumber = $(this).find('input[name=chasisNumber]').val();
                    var ownerName = $(this).find('input[name=ownerName]').val();

                    if (!chasisNumber.length || !ownerName.length) {    //string.length

                        isDataValid = false;
                        return false;
                    }

                    data.push({

                        id: parseInt(seriesNumberId),
                        chasisNumber: chasisNumber,
                        ownerName: ownerName
                    });
                });

                if (!isDataValid) {

                    swal("Error!", "Chassis Number(s) and owner name(s) required.", "error");
                    return;
                }


                if (!data.length) {

                    swal("Error!", "Select an auction No.", "error");
                    return;
                }


                callAjaxMethod(data);
            });

            function callAjaxMethod(data) {

                swal({
                    title: "Are You Sure?",
                    text: "Are you sure to apply for the selected Registration Mark(s) of Choice?",
                    type: "warning",
                    showCancelButton: true,
                    confirmButtonColor: "#DD6B55",
                    confirmButtonText: "Yes",
                    cancelButtonText: "No",
                    closeOnConfirm: true,
                    closeOnCancel: true,
                },

                    function (isConfirm) {
                        if (isConfirm) {

                            $("#loader").toggle();

                            $.ajax({
                                type: "POST",
                                url: "/Home/SaveApplications",
                                contentType: "application/json; charset=utf-8",
                                //data: data,
                                data: JSON.stringify(data),
                                dataType: "json",
                                success: function (response) {
                                    if (response.status) {

                                        window.location.href = "GetApplications";
                                    }
                                    else {
                                        swal("Error!", response.msg, "error");
                                    }
                                },
                                failure: function (response) {
                                    swal("Request Error!", "Request Error , Please try again latter." + response, "error");
                                }
                            })
                                .done(function () {

                                    $("#loader").toggle();
                                });
                        }
                        else {
                            swal("Cancelled", "Your imaginary file is safe :)", "error");
                        }
                    });

            }

            $("#seriesNumbers tbody").addClass("search");

            var lastSearchValue = "";

            var filterResolve = function () {

                var val = $(this).val().replace(/[^0-9]/g, '');

                $(this).val(val);

                var srnum = $("#seriesNumbers tbody tr").eq(0).children().eq(1).text();

                var maxLength = $.trim(srnum).length;

                if (val.length > 0 && val.length < maxLength) {

                    lastSearchValue = val;

                    return;
                }

                if (val == "") {

                    if (lastSearchValue != "") {

                        repaginate($('table.paginated'));
                    }

                    lastSearchValue = val;

                    return;
                }

                lastSearchValue = val;

                $('.search tr ').hide();

                var rex = new RegExp($(this).val(), 'i');

                var defer = $.Deferred();

                promiseloader = defer.then(function (value) {

                    $("#filter").prop("disabled", true);
                    return $("#loader").toggle();
                });

                promiseFilter = promiseloader.then(function (value) {

                    $('.search tr ').filter(function (i, v) {
                        var $t = $(this).children().eq(1);
                        return rex.test($t.text());
                    }).show();

                });

                promiseFilter.done(function (value) {

                    var totalRows = $('#seriesNumbers tbody tr:visible').length;

                    if (totalRows == 0) {

                        $("#no_match_found").show();
                    }
                    else {

                        $("#no_match_found").hide();
                    }

                    $("#filter").prop("disabled", false);

                    $("#filter").focus();

                    return $("#loader").toggle();
                });

                defer.resolve(5);

            };

            $('#filter').keyup(filterResolve);

            /////////////////////////////////////////////////////////////////

            var currentPage = 0;
            var numPerPage = 100;

            function repaginate(table) {

                var defer = $.Deferred();

                promiseloader = defer.then(function (value) {

                    $("#filter").prop("disabled", true);

                    return $("#loader").toggle();
                });

                promiseFilter = promiseloader.then(function (value) {

                    table.find('tbody tr').hide().slice(currentPage * numPerPage, (currentPage + 1) * numPerPage).show();
                });

                promiseFilter.done(function (value) {

                    $("#filter").prop("disabled", false);

                    $("#filter").focus();

                    return $("#loader").toggle();
                });

                defer.resolve(5);
            };

            $('table.paginated').each(function () {
                //var currentPage = 0;
                //var numPerPage = 500;
                var $table = $(this);

                $table.bind('repaginate', function () {
                    //$table.find('tbody tr').hide().slice(currentPage * numPerPage, (currentPage + 1) * numPerPage).show();

                    repaginate($table);
                });

                $table.trigger('repaginate');

                var numRows = $table.find('tbody tr').length;
                var numPages = Math.ceil(numRows / numPerPage);
                //var $pager = $('<div class="pager"></div>');

                //for (var page = 0; page < numPages; page++) {
                //    $('<span class="page-number"></span>').text(page + 1).bind('click', {
                //        newPage: page
                //    }, function (event) {

                //        $('#filter').val("");

                //        currentPage = event.data['newPage'];
                //        $table.trigger('repaginate');
                //        $(this).addClass('active').siblings().removeClass('active');
                //    }).appendTo($pager).addClass('clickable');
                //}

                //$pager.insertAfter(".rgDataDiv").find('span.page-number:first').addClass('active');
            });

            ////////////////////////////////////////////////////////////////////

            function navigate(page) {

                $('#filter').val("");
                currentPage = page; //parseInt($(this).data('page'));
                repaginate($('table.paginated'));
            }

            var totalPages = parseInt($("#totalRows").val()) / 100;

            var pageInit = false;

            $('#pagination-demo').twbsPagination({
                totalPages: totalPages,
                //visiblePages: visiblePages,
                onPageClick: function (event, page) {

                    if (pageInit) {

                        page = page - 1;
                        navigate(page);
                    }

                    pageInit = true;
                }
            });

            $("#filter").prop("disabled", false);

        });

    </script>
}

<div class="content-area col-sm-9" id="selectedSeriesNumbersDiv">
    <div class="detail-block">
        <h1> @ViewBag.series?.CategoryName [ @ViewBag.series?.SeriesName ] </h1>
        <span class="text">Select Registration Mark Of Choice</span>
        <div class="auction-block">

            <div class="col-md-12">
                <div class="col-md-4 pull-right">
                    <input type="text" id="filter" class="form-control" placeholder="Search Registration Mark" disabled />
                    <br />
                </div>
            </div>

            <div class="col-md-12">
                <div class="rgDataDiv" style="overflow-y:scroll;overflow-x: hidden;height: 300px;">

                    <table class="registration-table paginated" id="seriesNumbers">
                        <thead>
                            <tr>
                                <th width="50">Select</th>
                                <th width="50">Registration Mark</th>
                                <th width="300">Reserve Price</th>
                                <th></th>
                                <th></th>
                            </tr>
                            <tr id="no_match_found" style="display: none;">
                                <td colspan="3">NO MATCH FOUND</td>
                            </tr>
                        </thead>
                        <tbody>
                            
                            @foreach (var item in Model)
                            {
                                <tr>
                                    <td>
                                        @Html.CheckBox("selectedNumber", false, new { value = item.Id })
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.AuctionNumber)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.ReservePrice)
                                    </td>
                                    <td>
                                        @*<input type="text" class="form-control" name="chasisNumber" style="display:none;" onkeypress=" return removeSpecialChar(this, event);" />*@
                                        <input type="text" class="form-control" name="chasisNumber" style="display:none;" />
                                    </td>
                                    <td>
                                        <input type="text" class="form-control" name="ownerName" style="display:none;" onkeypress="return isNumberKey(this, event);" />
                                        <input type="hidden" name="seriesNumberId" asp-for="@item.Id" />
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
                <div class="text-center">
                    <input type="hidden" id="totalRows" value="@Model.Count()" />
                    <ul id="pagination-demo" class="pagination-sm"></ul>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="col-md-3"></div>
<div class="content-area col-md-9">
    <div class="detail-block">
        <h1 class="text-center">Selected Registration Mark of Choice</h1>
        <p class="text-center">Please, enter the chassis No. and owner name of the vehicle for which you want to get the registration mark.</p>
        <div class="auction-block">
            <table class="registration-table add" id="selectedSeriesNumbers">
                <thead>
                    <tr>
                        <th>Registration Mark</th>
                        <th>Reserve Price</th>
                        <th>Chassis Number</th>
                        <th>Vehicle Owner Name</th>
                    </tr>
                </thead>
                <tbody>
                </tbody>
            </table>
        </div>
        <br />
        <br />
        <div class="login-form add">
            <div class="buttons-holder">
                <a id="btnBack" class="btn-login" asp-area="" asp-controller="Home" asp-action="GetAuctionSeries">Back</a>
                <button class="btn-login" id="btnNext">Apply</button>
            </div>
        </div>
    </div>
</div>
